spring.datasource.url = jdbc:mysql://localhost:3306/tim18?useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC&allowPublicKeyRetrieval=true


spring.datasource.username =root
spring.datasource.password =root

#korisno ako je konekcija dugo u idle stanju
spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query = SELECT 1
spring.jackson.serialization.fail-on-empty-beans=false

#JPA-Hibernate
spring.jpa.show-sql = true

#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
#prvi put kada pokrenete program oba treba da budu otkomentarisana
#(popunice se baza podataka podacima iz skripte data.sql) nikakve podatke nemojte dodavati
#samo pokrenite i izadjite iz programa
#drugi put kada pokrenete program samo spring.datasource.initialization-mode=always zakomentarisati
#(baza ce biti popunjena podacima iz skripte i dodati podaci ce ostati u bazi i nakon gasenja programa)
#ovde mozete da dodajete sta vam treba
#ako nesto krene da pisti idite u bazu podatak i dropujte semu to bi trebalo da sredi problem
#spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto = update


#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

#optimizacija za mysql upite
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.show_sql=true
spring.jpa.hibernate.format_sql=true